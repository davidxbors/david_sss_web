"use strict";(self.webpackChunkessentials_security=self.webpackChunkessentials_security||[]).push([[451],{5680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>g});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),h=n,g=u["".concat(l,".").concat(h)]||u[h]||d[h]||s;return a?r.createElement(g,i(i({ref:t},p),{},{components:a})):r.createElement(g,i({ref:t},p))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5057:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=a(8168),n=(a(6540),a(5680));const s={},i="Introduction",o={unversionedId:"Web Application Security/Web basics/README",id:"Web Application Security/Web basics/README",title:"Introduction",description:"---",source:"@site/docs/Web Application Security/Web basics/README.md",sourceDirName:"Web Application Security/Web basics",slug:"/Web Application Security/Web basics/",permalink:"/web-security/Web Application Security/Web basics/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Web basics",permalink:"/web-security/Web Application Security/Web basics/"},next:{title:"web-basics",permalink:"/web-security/Web Application Security/Web basics/web-basics"}},l={},c=[{value:"HTTP Request / Response",id:"http-request--response",level:2},{value:"Basic format of the request:",id:"basic-format-of-the-request",level:3},{value:"Request Headers:",id:"request-headers",level:3},{value:"HTTP Request Circle",id:"http-request-circle",level:3},{value:"XHR - XMLHttpRequest",id:"xhr---xmlhttprequest",level:3},{value:"HTTP Response Codes",id:"http-response-codes",level:3},{value:"URL (Uniform Resource Locator)",id:"url-uniform-resource-locator",level:3},{value:"Browser execution model",id:"browser-execution-model",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...s}=e;return(0,n.yg)(u,(0,r.A)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"introduction"},"Introduction"),(0,n.yg)("hr",null),(0,n.yg)("p",null,"As the World Wide Web's high-level topology consists mainly of personal computing devices (e.g. desktops, laptops, mobile devices) making HTTP requests to web servers, the general field of web security consists of three main sub-fields: client-side security (i.e. browser security), communications security and server-side security, or web application security.\nThis lab and the following will focus on the first sub-field, although they might provide some general information on the former two."),(0,n.yg)("p",null,"The design of web applications, and their security in particular is influenced by the following characteristics:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Statelessness:")," by default HTTP is a simple request-response protocol maintaining no state between successive communications.\nThis shortcoming led to the design of cookies, which are small pieces of information exchanged between the client and the web application.\nThe type of information exchanged using cookies needs to be carefully chosen, as a malicious client could possibly attempt to send back a malformed or forged cookie; additionally, cookies most often (but not always) represent confidential data, which means that they should only be transferred over a secure channel (i.e. HTTPS).")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Message format:")," HTTP requests have a specific format, namely they comprise plain-text header and data (although newer improvements also implement a binary protocol).\nThe header contains various information about the client or the server (e.g. a user-agent, page caching information, text encoding information), while the payload is very often (but not always) an HTML page.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Addressing:")," resources on the web are located using the URI/URL addressing scheme.\nPossible vulnerabilities here include a misconfigured web server that allows viewing application-specific files, or worse, that allows accessing other files on the host machine.\nWhile this information leakage is not very dangerous by itself, it may be used as an intermediary stage for other attacks.\nYou can read more about URLs here ",(0,n.yg)("a",{parentName:"p",href:"https://skorks.com/2010/05/what-every-developer-should-know-about-urls/"},"[1]"),".")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"Request methods:")," HTTP communication is done by using methods, also called HTTP verbs.\nThe most used methods are GET, POST, PUT and DELETE.\nThe GET method is read-only and is used to retrieve data from the server.\nA DELETE request is used to remove the specified resource from the server.\nThe PUT method is used to modify an entire resource.\nPOST requests are used to create new resources.\nYou can find more information about all methods here ",(0,n.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"},"[2]"),"."))),(0,n.yg)("p",null,"While the client is provided with HTML, JavaScript, CSS pages, modern web applications are implemented using general-purpose scripting or programming languages, e.g. PHP, Java, Python, Ruby, etc. and centralize their data using database systems such as MySQL.\nFaulty back-end code can in itself provide a more dangerous attack surface to potentially malicious clients."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Client - Server",src:a(5986).A,width:"1049",height:"222"})),(0,n.yg)("h1",{id:"web-applications-today"},"Web Applications Today"),(0,n.yg)("p",null,"Dynamic websites provide tailored user experiences based on information known or given by the user.\nThe user usually has to authenticate to access the website and is authorized to use the services it provides.\nIn this case, the dynamic website contains information about the user, and there is therefore a great deal more for the attacker to steal.\nThe fundamental difference to static web pages is that a dynamic webpage/website contains functionality that can be compromised.\nBreaching the security of the server itself is no longer necessary. It is sufficient to discover the security hole in the dynamic website functionality.\nWe, therefore, need to look at the security of a web application itself. A dynamic website can be considered to be a web application."),(0,n.yg)("p",null,"Web applications introduce a new range of threats, or a new security perimeter, to put it another way.\nDepending on the setup, web applications are commonly located in an internal network or in the demilitarized zone, which therefore renders network level defenses ineffective.\nNetwork, services and operating system level defenses may have been perfectly set in place, but the system would still be vulnerable to a break-in.\nWeb applications commonly interact with internal systems, such as database servers.\nThe network level firewall could be blocking all traffic, but for web applications, it will have to allow HTTP and HTTPS traffic.\nAn attacker might therefore be able to bypass all network-level defenses."),(0,n.yg)("h1",{id:"types-of-vulnerabilities"},"Types of Vulnerabilities"),(0,n.yg)("p",null,"These days, web applications are very complex being composed of multiple libraries, frameworks and using multiple external services.\nEach component can have vulnerabilities.\nTypes of vulnerabilities:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"System vulnerabilities - applications or services that run inside an Operating System or an Operating System vulnerability"),(0,n.yg)("li",{parentName:"ul"},"Runtime vulnerabilities - when one of the components (frameworks such as PHP, Java, Python, WordPress, etc.) of the web application is vulnerable leads to a risk."),(0,n.yg)("li",{parentName:"ul"},"Browser vulnerabilities - occasionally attackers will discover a vulnerability in the browser itself that allows execution of arbitrary binary code when a user simply visits a compromised site.\nBrowsers are complex pieces of machinery with many subsystems (HTML rendering, JavaScript engine, CSS parser, image parsers, etc.), and a small coding mistake in any of these systems could offer malicious code just enough of a foothold to get running."),(0,n.yg)("li",{parentName:"ul"},"Vulnerabilities in web application implementation - here we can talk about OWASP Top Ten vulnerabilities ",(0,n.yg)("a",{parentName:"li",href:"https://owasp.org/www-project-top-ten/"},"[3]"),".")),(0,n.yg)("h1",{id:"http-hypertext-transfer-protocol"},"HTTP (Hypertext Transfer Protocol)"),(0,n.yg)("h2",{id:"http-request--response"},"HTTP Request / Response"),(0,n.yg)("p",null,"Communication between clients and servers is done by requests and responses:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"A client (a browser) sends an HTTP request to the web"),(0,n.yg)("li",{parentName:"ul"},"An web server receives the request"),(0,n.yg)("li",{parentName:"ul"},"The server runs an application to process the request"),(0,n.yg)("li",{parentName:"ul"},"The server returns an HTTP response (output) to the browser"),(0,n.yg)("li",{parentName:"ul"},"The client (the browser) receives the response")),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"HTTP - Request",src:a(573).A,width:"775",height:"493"})),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"HTTP - Response",src:a(2225).A,width:"753",height:"484"})),(0,n.yg)("h3",{id:"basic-format-of-the-request"},"Basic format of the request:"),(0,n.yg)("p",null,"VERB /resource/locator HTTP/1.1",(0,n.yg)("br",{parentName:"p"}),"\n","Header1: Value1",(0,n.yg)("br",{parentName:"p"}),"\n","Header2: Value2",(0,n.yg)("br",{parentName:"p"}),"\n","\u2026"),(0,n.yg)("p",null,"Header is separated from the body by 2 CRLF sequences"),(0,n.yg)("h3",{id:"request-headers"},"Request Headers:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Host:")," Indicates the desired host handling the request"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Accept:")," Indicates what MIME type(s) are accepted by the client; often used to specify JSON or XML output for web-services"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Cookie:")," Passes cookie data to the server"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Referer:")," Page leading to this request (note: this is not passed to other servers when using HTTPS on the origin)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Authorization:")," Used for basic auth pages (mainly). Takes the form \u201cBasic <base64\u2019d username:password>\u201d")),(0,n.yg)("h3",{id:"http-request-circle"},"HTTP Request Circle"),(0,n.yg)("p",null,"A typical HTTP request / response circle:"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"The browser requests an HTML page. The server returns an HTML file."),(0,n.yg)("li",{parentName:"ol"},"The browser requests a style sheet. The server returns a CSS file."),(0,n.yg)("li",{parentName:"ol"},"The browser requests a JPEG image. The server returns a JPG file."),(0,n.yg)("li",{parentName:"ol"},"The browser requests JavaScript code. The server returns a JS file"),(0,n.yg)("li",{parentName:"ol"},"The browser requests data. The server returns data (in XML or JSON).")),(0,n.yg)("h3",{id:"xhr---xmlhttprequest"},"XHR - XMLHttpRequest"),(0,n.yg)("p",null,"All browsers have a built-in XMLHttpRequest Object (XHR).\nXHR is a JavaScript object that is used to transfer data between a web browser and a web server.\nXHR is often used to request and receive data for the purpose of modifying a web page.\nDespite the XML and HTTP in the name, XHR is used with other protocols than HTTP, and the data can be of many different types like HTML, CSS, XML, JSON, and plain text."),(0,n.yg)("p",null,"The XHR Object is a Web Developers Dream, because you can:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Update a web page without reloading the page"),(0,n.yg)("li",{parentName:"ul"},"Request data from a server - after the page has loaded"),(0,n.yg)("li",{parentName:"ul"},"Receive data from a server - after the page has loaded"),(0,n.yg)("li",{parentName:"ul"},"Send data to a server - in the background")),(0,n.yg)("p",null,"The XHR Object is the underlying concept of AJAX and JSON:"),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"XMLHttpRequest",src:a(8621).A,width:"604",height:"331"})),(0,n.yg)("h3",{id:"http-response-codes"},"HTTP Response Codes"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"1xx -> Informational responses"),(0,n.yg)("li",{parentName:"ul"},"2xx -> Successful responses"),(0,n.yg)("li",{parentName:"ul"},"3xx -> Redirects"),(0,n.yg)("li",{parentName:"ul"},"4xx -> Client errors"),(0,n.yg)("li",{parentName:"ul"},"5xx -> Server errors")),(0,n.yg)("p",null,"xx = ","[00, 01 \u2026 99]"),(0,n.yg)("h3",{id:"url-uniform-resource-locator"},"URL (Uniform Resource Locator)"),(0,n.yg)("p",null,"With Hypertext and HTTP, URL is one of the key concepts of the Web.\nIt is the mechanism used by browsers to retrieve any published resource on the web."),(0,n.yg)("p",null,"URL stands for Uniform Resource Locator.\nA URL is nothing more than the address of a given unique resource on the Web.\nIn theory, each valid URL points to a unique resource.\nSuch resources can be an HTML page, a CSS document, an image, etc.\nIn practice, there are some exceptions, the most common being a URL pointing to a resource that no longer exists or that has moved.\nAs the resource represented by the URL and the URL itself are handled by the Web server, it is up to the owner of the web server to carefully manage that resource and its associated URL."),(0,n.yg)("p",null,"A URL incorporates the domain name, along with other detailed information, to create a complete address (or \u201cweb address\u201d) to direct a browser to a specific page online called a web page.\nIn essence, it\u2019s a set of directions and every web page has a unique one."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"URL",src:a(4786).A,width:"591",height:"71"})),(0,n.yg)("p",null,"Special characters are encoded as hex:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"%0A")," = newline"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"%20")," or + = space, ",(0,n.yg)("strong",{parentName:"li"},"%2B")," = + (special exception)")),(0,n.yg)("h1",{id:"browser"},"Browser"),(0,n.yg)("p",null,"A web browser (commonly referred to as a browser) is a software application for accessing the information on the World Wide Web.\nWhen a user requests a web page from a particular website, the web browser retrieves the necessary content from a web server and then displays the page on the screen."),(0,n.yg)("p",null,"A list of Web Browsers: Google Chrome, Mozilla Firefox, Edge, Internet Explorer, Safari, Opera, Netscape, etc."),(0,n.yg)("h2",{id:"browser-execution-model"},"Browser execution model"),(0,n.yg)("p",null,"Each browser windows or frame:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Loads content"),(0,n.yg)("li",{parentName:"ul"},"Renders it",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"Processes HTML and scripts to display page"),(0,n.yg)("li",{parentName:"ul"},"May involve images, subframes, etc."))),(0,n.yg)("li",{parentName:"ul"},"Responds to events such as:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"User actions: OnClick, OnMouseover"),(0,n.yg)("li",{parentName:"ul"},"Rendering: OnLoad, OnBeforeUnload"),(0,n.yg)("li",{parentName:"ul"},"Timing: setTimeout(), clearTimeout()")))),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"browser-analogy",src:a(9855).A,width:"703",height:"453"})),(0,n.yg)("p",null,"Examples of browser vulnerabilities:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Google Chrome",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"CVE-2019-5795 ",(0,n.yg)("a",{parentName:"li",href:"https://nvd.nist.gov/vuln/detail/CVE-2019-5795"},"https://nvd.nist.gov/vuln/detail/CVE-2019-5795")))),(0,n.yg)("li",{parentName:"ul"},"Mozilla Firefox",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"CVE-2019-11716 ",(0,n.yg)("a",{parentName:"li",href:"https://nvd.nist.gov/vuln/detail/CVE-2019-11716"},"https://nvd.nist.gov/vuln/detail/CVE-2019-11716"))))))}d.isMDXComponent=!0},5986:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/Session_01_Web_Basics_Diagram_01-4e99cb5c00c34bf8d073c4965c010cce.jpg"},9855:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/browser-analogy-da7c8bbedc92f056a9dcfc796a828b2a.png"},573:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/http-request-523dd8c5a326fadf7b1f8cfd34212c02.png"},2225:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/http-response-87929a991f6c12682ef693ea0c322a33.png"},4786:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/url-24037158118534a3ee9c009da8ce5feb.png"},8621:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/xml_http_request-d723b2b8f9593aedb784a73eeedbc3be.png"}}]);